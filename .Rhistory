#Read test data
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/Y_test.txt")
# 3. Merge test and training set
subjects <- rbind(subject_test, subject_train)
names(subjects) <- "subjectID"
X <- rbind(X_test, X_train)
X <- X[, includedFeatures]
names(X) <- gsub("\\(|\\)", "", features$featureName[includedFeatures])
Y <- rbind(y_test, y_train)
names(Y) = "activityID"
activity <- merge(Y, activities, by="activityID")$activityName
# Merge data frames
data <- cbind(subjects, X, activity)
write.table(data, "final_dataset.txt")
datatable <- data.table(data)
# 4. Create dataset after calculations
calculatedData<- datatable[, lapply(.SD, mean), by= c("subjectID", "activity")]
# 5. Store dataset
write.table(calculatedData, "calculated_dataset.txt",row.names = FALSE)
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
mean(dailysteps_new)
median(dailysteps_new)
typeofday <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(data$date, typeofday)
data_weekend <- subset(data, typeofday == "weekend")
data_weekday <- subset(data, typeofday == "weekday")
dailysteps_weekend <- tapply(data_weekend$steps, data_weekend$date, sum)
dailysteps_weekday <- tapply(data_weekday$steps, data_weekday$date, sum)
plot(y = dailysteps_weekend,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps")
plot(y = dailysteps_weekday,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern on weekdays", ylab = "Average # of steps")
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
mean(dailysteps_new)
median(dailysteps_new)
typeofday <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(typeofday(data$date))
data_weekend <- subset(data, typeofday == "weekend")
data_weekday <- subset(data, typeofday == "weekday")
dailysteps_weekend <- tapply(data_weekend$steps, data_weekend$date, sum)
dailysteps_weekday <- tapply(data_weekday$steps, data_weekday$date, sum)
plot(y = dailysteps_weekend,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps")
plot(y = dailysteps_weekday,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern on weekdays", ylab = "Average # of steps")
View(data)
View(dataset)
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
mean(dailysteps_new)
median(dailysteps_new)
typeofday <- weekdays(as.Date(date))
date <- levels(data$date)
typeofday <- weekdays(as.Date(date))
data$weekday <- weekdays(data$date)
install.packages("http://cran.r-project.org/bin/windows/contrib/3.0/tm_0.5-10.zip")
data$date <- as.Date(data$date)
data$weekday <- weekdays(data$date)
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
data$date <- as.Date(data$date)
data$typeofday <- weekdays(data$date)
day <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(day(data$typeofday))
data$typeofday <- as.factor(day(data$date))
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
data$date <- as.Date(data$date)
data$typeofday <- weekdays(data$date)
View(data)
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
data$date <- as.Date(data$date)
day <- function(date) {
f <- function(date) {
if (weekdays(date) %in% c("Saturday", "Sunday")) {
"weekend"
}
else {
"weekday"
}
}
sapply(date, f)
}
data$typeofday <- as.factor(day(data$date))
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
#Convert dates to date format
data$date <- as.Date(data$date)
data$typeofday <- weekdays(data$date)
ata$typeofdayfactor<- as.factor(c("weekend", "weekday"))
data$typeofdayfactor<- as.factor(c("weekend", "weekday"))
View(data)
View(data)
typeofdayfactor<- as.factor(c("weekend", "weekday"))
data[data$typeofday == "Sunday" | data$typeofday == "Saturday" ,5]<- factor("weekend")
View(data)
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
#Convert dates to date format
data$date <- as.Date(data$date)
data$typeofday <- weekdays(data$date)
typeofdayfactor<- as.factor(c("weekend", "weekday"))
data[data$typeofday == "Sunday" | data$typeofday == "Saturday" ,5]<- factor("weekend")
View(data)
data[!(data$typeofday == "Sunday" | act_new$typeofday == "Saturday"),5 ]<- factor("weekday")
data$typeofdayfactor<- as.factor(c("weekend", "weekday"))
data[data$typeofday == "Sunday" | data$typeofday == "Saturday" ,5]<- factor("weekend")
data[!(data$typeofday == "Sunday" | data$typeofday == "Saturday"),5 ]<- factor("weekday")
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
#Convert dates to date format
data$date <- as.Date(data$date)
data$typeofday <- weekdays(data$date)
data$typeofdayfactor<- as.factor(c("weekend", "weekday"))
data[data$typeofday == "Sunday" | data$typeofday == "Saturday" ,5]<- factor("weekend")
data[!(data$typeofday == "Sunday" | data$typeofday == "Saturday"),5 ]<- factor("weekday")
View(data)
dayType <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("zaterdag", "zondag")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(day(data$date))
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
#Convert dates to date format
data$date <- as.Date(data$date)
data$typeofday <- weekdays(data$date)
dayType <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("zaterdag", "zondag")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(day(data$date))
View(data)
data$typeofday <- weekdays(data$date)
View(data)
data$weekday <- weekdays(data$date)
dayType <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("zaterdag", "zondag")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(day(data$date))
View(data)
dayType <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("zaterdag", "zondag")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(dayType(data$date))
View(data)
data_weekend <- subset(data, typeofday == "weekend")
data_weekday <- subset(data, typeofday == "weekday")
dailysteps_weekend <- tapply(data_weekend$steps, data_weekend$date, sum)
dailysteps_weekday <- tapply(data_weekday$steps, data_weekday$date, sum)
plot(y = dailysteps_weekend,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps")
plot(y = dailysteps_weekday,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern on weekdays", ylab = "Average # of steps")
plot(y = dailysteps_weekend, x = names(dailysteps_weekend), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps")
plot(y = dailysteps_weekday,x = names(dailysteps_weekday), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern on weekdays", ylab = "Average # of steps")
rm(list=ls())
setwd("C:/Users/Jvandegevel/Documents/Coursera/Reproducible Research")
file <- unzip("activity.zip")
dataset <- read.csv(file,sep = ",", header = TRUE, stringsAsFactors = FALSE)
data <- dataset[which(!is.na(dataset$steps)),]
nrsteps <-tapply(data$steps, data$date, sum)
hist(nrsteps, main ="Total # of steps per days", xlab = "", col="blue")
# What are the mean and median total number of steps taken per day?
mean(nrsteps)
median(nrsteps)
#What is the average daily activity pattern?
dailysteps <-tapply(data$steps, data$interval, mean)
plot(y = dailysteps,x = names(dailysteps), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern", ylab = "Average # of steps")
max(dailysteps)
dailysteps[dailysteps == max(dailysteps)]
#Inputting missing values
sum(is.na(dataset))
data <- dataset
data[which(is.na(data$steps)),1] <- dailysteps[as.character(data[which(is.na(data$steps)),3])]
sum(is.na(data))
dailysteps_new<-tapply(data$steps, data$date, sum)
hist(dailysteps_new, main = "Total # of steps per day", xlab = "",col="red")
#Calculating new mean and median
mean(dailysteps_new)
median(dailysteps_new)
#Convert dates to date format
data$date <- as.Date(data$date)
data$weekday <- weekdays(data$date)
dayType <- function(dates) {
f <- function(date) {
if (weekdays(date) %in% c("zaterdag", "zondag")) {
"weekend"
}
else {
"weekday"
}
}
sapply(dates, f)
}
data$typeofday <- as.factor(dayType(data$date))
data_weekend <- subset(data, typeofday == "weekend")
data_weekday <- subset(data, typeofday == "weekday")
dailysteps_weekend <- tapply(data_weekend$steps, data_weekend$date, sum)
dailysteps_weekday <- tapply(data_weekday$steps, data_weekday$date, sum)
par(mfrow=c(2,1))
plot(y = dailysteps_weekend, x = names(dailysteps_weekend), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps")
plot(y = dailysteps_weekend, x = names(dailysteps_weekend), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps",ylim =c(0, 250))
dailysteps_weekend <- tapply(data_weekend$steps, data_weekend$date, mean)
dailysteps_weekday <- tapply(data_weekday$steps, data_weekday$date, mean)
plot(y = dailysteps_weekend, x = names(dailysteps_weekend), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps")
plot(y = dailysteps_weekend, x = names(dailysteps_weekend), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps",ylim =c(0, 250))
View(data_weekday)
View(data_weekend)
dailysteps_weekend <- tapply(data_weekend$steps, data_weekend$interval, mean)
dailysteps_weekday <- tapply(data_weekday$steps, data_weekday$interval, mean)
plot(y = dailysteps_weekend, x = names(dailysteps_weekend), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps",ylim =c(0, 250))
plot(y = dailysteps_weekend, x = names(dailysteps_weekend), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern in weekend", ylab = "Average # of steps")
plot(y = dailysteps_weekday,x = names(dailysteps_weekday), type = "l", xlab = "5-minute interval",
main = "Average Daily Activity Pattern on weekdays", ylab = "Average # of steps")
mean(nrsteps)-mean(dailysteps_new)
median(nrsteps)-median(dailysteps_new)
